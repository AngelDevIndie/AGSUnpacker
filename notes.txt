######################################
####### AGS disassembler notes #######
######################################

############# Registers ##############
  0x00, null
  0x01, sp  - stack pointer
  0x02, mar - memory address register
  0x03, ax  - general purpose
  0x04, bx  - general purpose
  0x05, cx  - general purpose
  0x06, op  - object pointer (for member func calls)
  0x07, dx  - general purpose

########## Instructions set ##########
[opcode], [mnemonic],     [args count]
  0x00,   "null",              0
  0x01,   "add",               2
  0x02,   "sub",               2
  0x03,   "mov",               2
  0x04,   "memwritelit",       2
  0x05,   "ret",               0
  0x06,   "mov",               2
  0x07,   "memread",           1
  0x08,   "memwrite",          1
  0x09,   "mul",               2
  0x0A,   "div",               2
  0x0B,   "add",               2
  0x0C,   "sub",               2
  0x0D,   "bit_and",           2
  0x0E,   "bit_or",            2
  0x0F,   "cmp",               2
  0x10,   "ncmp",              2
  0x11,   "gt",                2
  0x12,   "lt",                2
  0x13,   "gte",               2
  0x14,   "lte",               2
  0x15,   "and",               2
  0x16,   "or",                2
  0x17,   "call",              1
  0x18,   "memread.b",         1
  0x19,   "memread.w",         1
  0x1A,   "memwrite.b",        1
  0x1B,   "memwrite.w",        1
  0x1C,   "jz",                1
  0x1D,   "push",              1
  0x1E,   "pop",               1
  0x1F,   "jmp",               1
  0x20,   "mul",               2
  0x21,   "farcall",           1
  0x22,   "farpush",           1
  0x23,   "farsubsp",          1
  0x24,   "sourceline",        1
  0x25,   "callscr",           1
  0x26,   "thisaddr",          1
  0x27,   "setfuncargs",       1
  0x28,   "mod",               2
  0x29,   "xor",               2
  0x2A,   "not",               1
  0x2B,   "shl",               2
  0x2C,   "shr",               2
  0x2D,   "callobj",           1
  0x2E,   "checkbounds",       2
  0x2F,   "memwrite.ptr",      1
  0x30,   "memread.ptr",       1
  0x31,   "memwrite.ptr.0",    0
  0x32,   "meminit.ptr",       1
  0x33,   "load.sp.offs",      1
  0x34,   "checknull.ptr",     0
  0x35,   "f.add",             2
  0x36,   "f.sub",             2
  0x37,   "f.mul",             2
  0x38,   "f.div",             2
  0x39,   "f.add",             2
  0x3A,   "f.sub",             2
  0x3B,   "f.gt",              2
  0x3C,   "f.lt" ,             2
  0x3D,   "f.gte",             2
  0x3E,   "f.lte",             2
  0x3F,   "zeromem",           1
  0x40,   "newstring",         1
  0x41,   "strcmp",            2
  0x42,   "strnotcmp",         2
  0x43,   "checknull",         1
  0x44,   "loopcheckoff",      0
  0x45,   "memwrite.ptr.0.nd", 0
  0x46,   "jnz",               1
  0x47,   "dynamicbounds",     1
  0x48,   "newarray",          3
  0x49,   "newuserobject",     2

###### Instruction description #######
  "null" - not used
  "add" - reg[arg1] += arg2
  "sub" - reg[arg1] += arg2
  "mov" - reg[arg2] = reg[arg1]
          reg[arg2] = arg1
  "memwritelit" - m[MAR] = arg2 (copy arg1 bytes)
  "ret" - return from a subroutine
  